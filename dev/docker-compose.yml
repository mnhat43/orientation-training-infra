
services:
  web:
    image: nginx:1.17.2
    restart: always
    ports:
      - ${APP_PORT:-80}:80
    depends_on:
      - golang
    volumes:
      - ./nginx/${ENV}/orientation-training.template:/etc/nginx/conf.d/orientation-training.template
    command: /bin/bash -c "envsubst '' < /etc/nginx/conf.d/orientation-training.template > /etc/nginx/conf.d/orientation-training.conf && nginx -g 'daemon off;'"

  golang:
    build: 
      context: ${GO_API}
      dockerfile: build/${ENV}/Dockerfile
    env_file: ${GO_API}/.env
    depends_on:
      - database
    volumes:
      - ${GO_API}:/app
    ports:
      - ${API_PORT:-8010}:8080

  database:
    image: postgres:11.5
    env_file: ${GO_API}/.env
    ports:
      - ${DB_PORT:-5432}:5432

  nodejs:
    image: node:18-alpine
    env_file: ${NODE_SPA}/.env
    command: sh -c "yarn install && yarn dev"
    ports:
      - ${SPA_PORT:-3010}:3000
    environment:
      - HOST=0.0.0.0
      - PORT=3000
    volumes:
      - ${NODE_SPA}:/app
      - /app/node_modules
    working_dir: /app

  adminer:
    image: adminer:latest
    restart: always
    ports:
      - ${ADMINER_PORT:-9010}:8080
    environment:
      - ADMINER_DESIGN=pepa-linha-dark
